@use 'sass:math';
$grid-columns:12;


.container{
    width: 100%;
    max-width: 1024px;
    padding: .75rem;
    margin: 0px auto;
}

.container-fluid{
    width: 100%;
    padding: .75rem;
}

.row{
    display: flex;
    // flex-flow: wrap;
    flex-wrap: wrap;
}


$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
);

@include media-breakpoint-up('xs'){
    @for $i from 1 through $grid-columns{
        .col-xs-#{$i}{
            box-sizing: border-box;
            width: math.div($i * 100%,$grid-columns);
        }
    }
};


@include media-breakpoint-up('sm'){
    @for $i from 1 through $grid-columns{
        .col-sm-#{$i}{
            box-sizing: border-box;
            width: math.div($i * 100%,$grid-columns);
        }
    }
};

@include media-breakpoint-up('md'){
    @for $i from 1 through $grid-columns{
        .col-md-#{$i}{
            box-sizing: border-box;
            width: math.div($i * 100%,$grid-columns);
        }
    }
};



@include media-breakpoint-up('lg'){
    @for $i from 1 through $grid-columns{
        .col-lg-#{$i}{
            box-sizing: border-box;
            width: math.div($i * 100%,$grid-columns);
        }
    }
};





//max-width not work properly here to make grid.!important

// @include media-breakpoint-down('md'){
//     @for $i from 1 through $grid-columns{
//         .col-sm-#{$i}{
//             width: math.div($i * 100%,$grid-columns);
//         }
//     }
// };

// @include media-breakpoint-down('lg'){
//     @for $i from 1 through $grid-columns{
//         .col-md-#{$i}{
//             width: math.div($i * 100%,$grid-columns);
//         }
//     }
// };


// @include media-breakpoint-down('xl'){
//     @for $i from 1 through $grid-columns{
//         .col-lg-#{$i}{
//             width: math.div($i * 100%,$grid-columns);
//         }
//     }
// };